import { Toaster } from "sonner";
import { CookiesProvider } from "next-client-cookies/server";
import type { Metadata } from "next";
import localFont from "next/font/local";
import { jwtDecode } from "jwt-decode";
import ReactQueryClientProvider from "@/components/reactQueryClientProvider";
import ModalProvider from "@/components/providers/modal-provider";
import { EdgeStoreProvider } from "@/lib/edgestore";
import "./globals.css";

const geistSans = localFont({
	src: "./fonts/GeistVF.woff",
	variable: "--font-geist-sans",
	weight: "100 900",
});
const geistMono = localFont({
	src: "./fonts/GeistMonoVF.woff",
	variable: "--font-geist-mono",
	weight: "100 900",
});

export const metadata: Metadata = {
	title: "Create Next App",
	description: "Generated by create next app",
};

function isTokenExpired(token?: string | null) {
	if (!token) return true;

	try {
		const decodedToken = jwtDecode(token);
		const currentTime = Date.now() / 1000;
		if (decodedToken.exp != undefined) {
			return decodedToken.exp < currentTime;
		}
		return true;
	} catch (err) {
		console.log('Error decoding token: ', err);
		return true;
	}
}

export default function RootLayout({
	children,
}: Readonly<{
	children: React.ReactNode;
}>) {

	return (
		<html lang="en">
			<body
				className={`${geistSans.variable} ${geistMono.variable} antialiased`}
			>
				<CookiesProvider>
				<ReactQueryClientProvider>
					<EdgeStoreProvider>
						{children}
						<Toaster position="bottom-center" />
						<ModalProvider />
					</EdgeStoreProvider>
				</ReactQueryClientProvider>
				</CookiesProvider>

			</body>
		</html>
	);
}
