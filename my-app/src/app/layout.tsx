import { Toaster } from "sonner";
import { CookiesProvider } from "next-client-cookies/server";
import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import { jwtDecode } from "jwt-decode";
import { useEffect } from "react";
import { useRouter } from "next/navigation";
import { QueryClientProvider } from "react-query";
import { ReactQueryClientProvider } from "@/components/reactQueryClientProvider";

const geistSans = localFont({
	src: "./fonts/GeistVF.woff",
	variable: "--font-geist-sans",
	weight: "100 900",
});
const geistMono = localFont({
	src: "./fonts/GeistMonoVF.woff",
	variable: "--font-geist-mono",
	weight: "100 900",
});

export const metadata: Metadata = {
	title: "Create Next App",
	description: "Generated by create next app",
};

function isTokenExpired(token?: string | null) {
	if (!token) return true;

	try {
		const decodedToken = jwtDecode(token);
		const currentTime = Date.now() / 1000;
		if (decodedToken.exp != undefined) {
			return decodedToken.exp < currentTime;
		}
		return true;
	} catch (err) {
		console.log('Error decoding token: ', err);
		return true;
	}
}

export default function RootLayout({
	children,
}: Readonly<{
	children: React.ReactNode;
}>) {

	return (
		<ReactQueryClientProvider>
		<html lang="en">
			<body
				className={`${geistSans.variable} ${geistMono.variable} antialiased`}
			>
				<CookiesProvider>
					{children}
				</CookiesProvider>
				<Toaster position="bottom-center" />
			</body>
		</html>
		</ReactQueryClientProvider>
	);
}
